using WS
using Dates

function escQuote(s)
  replace(s, "\"", "\\\"")
end

function printJS(ws::WSArm)
  if randbool() # randomly flip the position of the answers for this experiment
    if ws.correctIndex==1
      flipidx = 2
    else
      flipidx = 1
    end
    println("      [\"$(escQuote(ws.sentence))\", \"$(escQuote(ws.question))\", \"$(escQuote(ws.answers[2]))\", \"$(escQuote(ws.answers[1]))\", $(flipidx-1)],") # convert to 0-based indexing
  else # leave order of answers alone
    println("      [\"$(escQuote(ws.sentence))\", \"$(escQuote(ws.question))\", \"$(escQuote(ws.answers[1]))\", \"$(escQuote(ws.answers[2]))\", $(ws.correctIndex-1)],") # convert to 0-based indexing
  end
end

function printJSPair(wspair::WSPair)
  printJS(wspair.arms[1])
  printJS(wspair.arms[2])
end

function printJSSession(session)
  # convert to zero-based indexing in 0 to 2n-1
  expstr = Int[2*(q.index-1)+(q.which-1) for q in session]
  println("      $expstr,")
end

function dumpJSExperiment(corpus, sessions)
  println("   var questions = [")
  for question in corpus
    printJSPair(question)
  end
  println("   ];")
  println("   var allIndices = [")
  for session in sessions
    printJSSession(session)
  end
  println("   ];")
end

# -----------------------------------------------------------------------------

if length(ARGS) > 0
  corpus = readCorpus(ARGS[1])
  expcorpus = corpus[1:end]
  numtrials, numquestions = (1, 8)
else
  corpus = [readCorpus("corpus/test-corpus.html"), readCorpus("corpus/no-amb-corpus.html")]
  expcorpus = corpus[1:end]
  numtrials, numquestions = (50, 40)
end
seed = 838
srand(seed)
println("   // generated by make_questions.jl on $(now()) with seed=$seed")
sessions = genExperimentQuestions(expcorpus, numtrials, numquestions)
if !checkExperimentQuestions(expcorpus, numtrials, numquestions, sessions)
  println(STDERR, "check failed!")
else
  println(STDERR, "check passed")
end
dumpJSExperiment(expcorpus, sessions)
